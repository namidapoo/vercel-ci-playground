name: Comment on PR about Deployment

env:
  ENV_NAME: preview-${{ github.head_ref }}

on:
  pull_request:
    types:
      - opened

jobs:
  check-if-deployment-exists:
    name: Check if a successful deployment exists
    runs-on: ubuntu-latest
    permissions:
      deployments: read
    env:
      GH_TOKEN: ${{ github.token }}
    outputs:
      state: ${{ steps.get-status.outputs.state }}
      url: ${{ steps.get-status.outputs.url }}
      inspect_url: ${{ steps.get-status.outputs.inspect_url }}
      project_name: ${{ steps.get-status.outputs.project_name }}
    steps:
      - name: Get deployment status
        id: get-status
        run: |
          set -e
          
          # Get deployments for the environment
          DEPLOYMENTS=$(gh api -H "Accept: application/vnd.github.v3+json" \
            "/repos/${{ github.repository }}/deployments?environment=${{ env.ENV_NAME }}" || echo "[]")
          
          # Check if any deployments exist
          if [ "$(echo "$DEPLOYMENTS" | jq 'length')" -eq 0 ]; then
            echo "state=" >> $GITHUB_OUTPUT
            echo "url=" >> $GITHUB_OUTPUT
            echo "inspect_url=" >> $GITHUB_OUTPUT
            echo "project_name=${{ github.event.repository.name }}" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Get the latest deployment ID
          DEP_ID=$(echo "$DEPLOYMENTS" | jq -r '.[0].id')
          
          # Get deployment statuses
          STATUSES=$(gh api -H "Accept: application/vnd.github.v3+json" \
            "/repos/${{ github.repository }}/deployments/${DEP_ID}/statuses" || echo "[]")
          
          # Check if any statuses exist
          if [ "$(echo "$STATUSES" | jq 'length')" -eq 0 ]; then
            echo "state=" >> $GITHUB_OUTPUT
            echo "url=" >> $GITHUB_OUTPUT
            echo "inspect_url=" >> $GITHUB_OUTPUT
            echo "project_name=${{ github.event.repository.name }}" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Get the latest status
          LATEST_STATUS=$(echo "$STATUSES" | jq '.[0]')
          STATE=$(echo "$LATEST_STATUS" | jq -r '.state')
          URL=$(echo "$LATEST_STATUS" | jq -r '.environment_url // ""')
          DESCRIPTION=$(echo "$LATEST_STATUS" | jq -r '.description // ""')
          
          echo "state=$STATE" >> $GITHUB_OUTPUT
          echo "url=$URL" >> $GITHUB_OUTPUT
          
          # Extract inspect URL and project name from description
          if [[ "$DESCRIPTION" == inspect:* ]]; then
            INSPECT_URL=$(echo "$DESCRIPTION" | grep -o 'inspect:[^|]*' | cut -d: -f2- || echo "")
            PROJECT_NAME=$(echo "$DESCRIPTION" | grep -o 'project:[^|]*' | cut -d: -f2- || echo "${{ github.event.repository.name }}")
            echo "inspect_url=$INSPECT_URL" >> $GITHUB_OUTPUT
            echo "project_name=$PROJECT_NAME" >> $GITHUB_OUTPUT
          else
            echo "inspect_url=" >> $GITHUB_OUTPUT
            echo "project_name=${{ github.event.repository.name }}" >> $GITHUB_OUTPUT
          fi

  comment:
    needs: check-if-deployment-exists
    name: Comment on PR
    if: needs.check-if-deployment-exists.outputs.state != null
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: github-actions[bot]
          body-includes: Deploy to Vercel

      - name: Get datetime for now
        id: datetime
        run: |
          # JST (UTC+9) の時刻を取得
          JST_TIME=$(TZ=Asia/Tokyo date +'%b %d, %Y %I:%M%p' | sed 's/AM/am/g; s/PM/pm/g')
          echo "value=$JST_TIME" >> $GITHUB_OUTPUT
          SHORT_SHA="${{ github.event.pull_request.head.sha }}"
          echo "short_sha=${SHORT_SHA:0:7}" >> $GITHUB_OUTPUT

      - name: Comment on PR if the deployment has completed
        if: needs.check-if-deployment-exists.outputs.state == 'success'
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: |
            **Deploy to Vercel**
            
            | Name | Status | Preview | Latest Commit | Updated (JST) |
            | :--- | :----- | :------ | :------------ | :------------ |
            | **${{ needs.check-if-deployment-exists.outputs.project_name }}** | ✅ Ready${{ needs.check-if-deployment-exists.outputs.inspect_url && format(' ([Inspect]({0}))', needs.check-if-deployment-exists.outputs.inspect_url) || '' }} | [Visit Preview](${{ needs.check-if-deployment-exists.outputs.url }}) | `${{ steps.datetime.outputs.short_sha }}` | ${{ steps.datetime.outputs.value }} |
          edit-mode: replace

      - name: Create comment if the deployment has not completed
        if: needs.check-if-deployment-exists.outputs.state == 'in_progress'
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: |
            **Deploy to Vercel**
            
            | Name | Status | Preview | Latest Commit | Updated (JST) |
            | :--- | :----- | :------ | :------------ | :------------ |
            | **${{ needs.check-if-deployment-exists.outputs.project_name }}** | ⏳ In Progress | - | `${{ steps.datetime.outputs.short_sha }}` | ${{ steps.datetime.outputs.value }} |
          edit-mode: replace

      - name: Create comment if deployment is starting
        if: needs.check-if-deployment-exists.outputs.state == null
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            **Deploy to Vercel**
            
            | Name | Status | Preview | Latest Commit | Updated (JST) |
            | :--- | :----- | :------ | :------------ | :------------ |
            | **${{ needs.check-if-deployment-exists.outputs.project_name }}** | ⏳ Starting | - | `${{ steps.datetime.outputs.short_sha }}` | ${{ steps.datetime.outputs.value }} |