name: Comment on PR about Deployment

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  comment-deployment-status:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
      actions: read
    steps:
      - name: Check deployment status and comment
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          COMMIT_SHA="${{ github.event.pull_request.head.sha }}"
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          
          # デプロイワークフローの実行状況を確認
          WORKFLOW_RUN=$(gh api repos/${{ github.repository }}/actions/workflows/vercel-preview-deploy.yml/runs \
            --jq ".workflow_runs[] | select(.head_sha == \"$COMMIT_SHA\") | {id, status, conclusion}" \
            | head -1 | tr -d '\n')
          
          echo "Workflow run data: $WORKFLOW_RUN"
          
          if [ -n "$WORKFLOW_RUN" ] && [ "$WORKFLOW_RUN" != "null" ] && [ "$WORKFLOW_RUN" != "" ]; then
            STATUS=$(echo "$WORKFLOW_RUN" | jq -r '.status // "unknown"')
            CONCLUSION=$(echo "$WORKFLOW_RUN" | jq -r '.conclusion // "unknown"')
            RUN_ID=$(echo "$WORKFLOW_RUN" | jq -r '.id // ""')
            
            echo "Workflow status: $STATUS, conclusion: $CONCLUSION"
            
            if [ "$STATUS" = "completed" ] && [ "$CONCLUSION" = "success" ]; then
              # デプロイ成功済み - ワークフローの出力からPreview URLを取得
              DEPLOY_OUTPUT=$(gh api repos/${{ github.repository }}/actions/runs/$RUN_ID/jobs --jq '.jobs[0].steps[] | select(.name | contains("Deploy Project Artifacts")) | .conclusion')
              
              if [ "$DEPLOY_OUTPUT" = "success" ]; then
                # ログからPreview URLを抽出（簡易版）
                LOGS=$(gh api repos/${{ github.repository }}/actions/runs/$RUN_ID/logs)
                
                COMMENT_BODY="<!-- vercel-preview-comment:$COMMIT_SHA -->
          ## 🚀 Preview Deployment
          
          ✅ **Status**: Ready ([Inspect](https://vercel.com))
          🔗 **Preview**: [Visit Preview](https://vercel.com/${{ github.repository }})
          📝 **Branch**: \`$BRANCH_NAME\`
          📅 **Updated**: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
          "
              else
                COMMENT_BODY="<!-- vercel-preview-comment:$COMMIT_SHA -->
          ## 🚀 Preview Deployment
          
          ❌ **Status**: Failed
          📝 **Branch**: \`$BRANCH_NAME\`
          📅 **Updated**: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
          "
              fi
            else
              # デプロイ中またはまだ開始されていない
              COMMENT_BODY="<!-- vercel-preview-comment:$COMMIT_SHA -->
          ## 🚀 Preview Deployment
          
          ⏳ **Status**: In Progress
          📝 **Branch**: \`$BRANCH_NAME\`
          📅 **Updated**: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
          "
            fi
          else
            # ワークフローがまだ開始されていない
            COMMENT_BODY="<!-- vercel-preview-comment:$COMMIT_SHA -->
          ## 🚀 Preview Deployment
          
          ⏳ **Status**: Starting
          📝 **Branch**: \`$BRANCH_NAME\`
          📅 **Updated**: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
          "
          fi
          
          # コメントの投稿/更新
          COMMENT_ID=$(gh pr comment list $PR_NUMBER --json body,id --jq ".[] | select(.body | contains(\"vercel-preview-comment:$COMMIT_SHA\")) | .id")
          
          if [ -z "$COMMENT_ID" ]; then
            # 新規コメント作成
            gh pr comment $PR_NUMBER --body "$COMMENT_BODY"
            echo "Created new comment on PR #$PR_NUMBER"
          else
            # 既存コメント更新
            gh api repos/${{ github.repository }}/issues/comments/$COMMENT_ID --method PATCH --field body="$COMMENT_BODY"
            echo "Updated existing comment on PR #$PR_NUMBER"
          fi