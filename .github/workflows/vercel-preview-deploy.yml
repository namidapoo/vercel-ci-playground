name: Vercel Preview Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  ENV_NAME: preview-${{ github.ref_name }}

on:
  workflow_dispatch:
  push:
    branches-ignore:
      - main

jobs:
  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      contents: read
    outputs:
      url: ${{ steps.deploy-url.outputs.url }}
    steps:
      - name: Start deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ github.token }}
          env: ${{ env.ENV_NAME }}

      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.4.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Install Vercel CLI
        run: pnpm add -g vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        id: deploy-url
        run: |
          DEPLOY_OUTPUT=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "$DEPLOY_OUTPUT"
          PREVIEW_URL=$(echo "$DEPLOY_OUTPUT" | grep -o 'https://[^[:space:]]*\.vercel\.app' | head -1)
          echo "url=$PREVIEW_URL" >> $GITHUB_OUTPUT
          echo "Preview URL: $PREVIEW_URL"

      - name: Update deployment status
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ github.token }}
          status: ${{ job.status }}
          env: ${{ steps.deployment.outputs.env }}
          env_url: ${{ steps.deploy-url.outputs.url }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

  check-if-pr-exists:
    needs: deploy
    name: Check if associated PR exists
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
    outputs:
      pr-number: ${{ steps.get-pr-number.outputs.pr-number }}
    steps:
      - name: Get associated PRs
        id: prs
        run: >
          echo "pulls=$(gh api -H "Accept: application/vnd.github.v3+json" -X GET
          /repos/${{ github.repository }}/pulls
          -f state=open
          -f head=${{ github.repository_owner }}:${{ github.ref_name }})" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Get PR number
        id: get-pr-number
        run: |
          if [ "${{ fromJSON(env.PULL) }}" ]; then
            echo "pr-number=${{ fromJSON(env.PULL).number }}" >> $GITHUB_OUTPUT;
          else
            echo "pr-number=0" >> $GITHUB_OUTPUT;
          fi
        env:
          PULL: ${{ toJSON(fromJSON(steps.prs.outputs.pulls)[0]) }}

  comment:
    needs:
      - deploy
      - check-if-pr-exists
    name: Comment on PR
    if: needs.check-if-pr-exists.outputs.pr-number != 0
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ needs.check-if-pr-exists.outputs.pr-number }}
          comment-author: github-actions[bot]
          body-includes: Preview Deployment

      - name: Get datetime for now
        id: datetime
        run: echo "value=$(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_OUTPUT

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ needs.check-if-pr-exists.outputs.pr-number }}
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: |
            ## 🚀 Preview Deployment
            
            ✅ **Status**: Ready ([Inspect](https://vercel.com))
            🔗 **Preview**: [Visit Preview](${{ needs.deploy.outputs.url }})
            📝 **Branch**: `${{ github.ref_name }}`
            📅 **Updated**: ${{ steps.datetime.outputs.value }}
            📋 **Commit**: `${{ github.sha }}`
          edit-mode: replace